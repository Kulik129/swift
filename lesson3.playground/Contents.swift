import UIKit
//Есть словарь с видами чая и их стоимостью. Есть очередь людей, которые хотят заказать чай (можно представить её в виде массива видов чая, которые хотят заказать). Необходимо последовательно выводить в консоль сколько заплатит покупатель (необходимо вывести его номер по порядку, чай, который он заказал и стоимость).

let teaPrices = ["черный": 100, "зеленый": 120, "мятный": 80]
let queue = ["зеленый", "мятный", "черный", "мятный"]
for (index, item) in queue.enumerated() {
    print("Покупатель номер \(index+1). Чай: \(item). Стоимость: \(teaPrices[item] ?? 0)")
}

//Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]. Необходимо создать новый массив, который будет состоять из элементов старого, но не должно быть nil, не должно быть 0 и 4, а также массив должен быть отсортирован по возрастанию.
let oldArray: [Int?] = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]
var newArray = oldArray.compactMap{ $0 }.filter{ $0 != 0 && $0 != 4 }.sorted()
print(newArray)

//Написать функцию, которая на вход принимает целое число, а возвращает массив, который сформирован по следующим правилам: количество элементов соответствует переданному числу, массив начинается с 1, каждый последующий элемент больше предыдущего в 2 раза.

func arrayFrom(number: Int) -> [Int] {
    var array = [Int]()
    var value = 1
    for _ in 0..<number {
        array.append(value)
        value *= 2
    }
    return array
}

